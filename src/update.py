"""
File: update.py
Description: Update data with a goodware/malware sample
Author: Savannah Alfaro, sea2985
"""
# Standard Imports
import hashlib

# Third-Party Imports
import pefile
import pandas as pd
from termcolor import colored


def update(testing_filename, is_malware):
    """
    Update pe_imports.csv with a goodware/malware sample.
    :param testing_filename: (String) the testing file name
    :param is_malware: (Boolean) is the sample malware?
    :return: (Boolean) true if the data was updated
    """
    # load in the data
    print("\tLoading in the data...")
    data = pd.read_csv('../data/pe_imports.csv')
    columns = data.columns.values.tolist()[1:-1]
    function_calls = list()

    # open,close, read file and calculate MD5 on its contents
    print("\tCalculating the MD5 Hash...")
    with open(testing_filename, 'rb') as file:
        file_contents = file.read()
        md5_hash = hashlib.md5(file_contents).hexdigest()

    # check to see if hash value is already in dataset
    hash_values = data["hash"].tolist()
    if md5_hash in hash_values:
        print(colored("\tHash already in dataset", "red"))
        return False
    else:
        # append new row to dataframe
        new_row = list()
        new_row.append(md5_hash)

        # gather all function calls
        pe = pefile.PE(testing_filename)
        if hasattr(pe, "DIRECTORY_ENTRY_IMPORT"):
            for entry in pe.DIRECTORY_ENTRY_IMPORT:
                for function_call in entry.imports:
                    function_calls.append(function_call.name.decode('utf-8'))

        # add function calls
        for column in columns:
            if column in function_calls:
                new_row.append(1)
            else:
                new_row.append(0)

        # if malware, append a 1
        print("\tAppending a row to the data...")
        if is_malware:
            new_row.append(1)
        else:
            new_row.append(0)

        # append new row and write to a csv file
        print("\tWriting the data to a CSV file...")
        data.loc[len(data)] = new_row
        data.to_csv(r'../data/pe_imports.csv', index=False)
        print("\tWrote the data to ../data/pe_imports.csv.\n")
        return True
