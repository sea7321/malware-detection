# Third-Party Imports
import sys

import pefile
import pandas as pd

def get_function_calls(filename):
    # variables
    function_calls = list()

    print("\tLoading in the data...")
    data = pd.read_csv('../data/training_data.csv')
    blah_data = data.drop('malware', axis=1)
    columns = blah_data.columns.values.tolist()

    # print last 5 rows
    print(data.tail(5))

    # gather all function calls
    try:
        pe = pefile.PE(filename)
        if hasattr(pe, "DIRECTORY_ENTRY_IMPORT"):
            for entry in pe.DIRECTORY_ENTRY_IMPORT:
                for function_call in entry.imports:
                    function_calls.append(
                        "{} at 0x{}".format(function_call.name.decode('utf-8'), function_call.address))
    except Exception:
        raise Exception("Error listing function calls within {}".format(filename))

    # TODO: Need to check to see if hash already in dataframe

    # append new row to dataframe
    new_row = list()
    for column in columns:
        if column in function_calls:
            new_row.append(1)
        else:
            new_row.append(0)

    # TODO: Fix if malware or not, specifying as malware for rn
    new_row.append(1)
    data.loc[len(data)] = new_row

    # print last 5 rows
    print(data.tail(5))


def main():
    filename = sys.argv[1]
    get_function_calls(filename)


if __name__ == "__main__":
    main()
